strict digraph  {
nodesep=3;
0 [selector=None, type=source];
1 [selector=None, type=None];
4 [selector=None, type=None];
3 [selector=None, type=None];
2 [selector=None, type=None];
10 [selector=if, type=None];
9 [selector=None, type=None];
8 [selector=None, type=None];
7 [selector=None, type=None];
6 [selector=None, type=None];
5 [selector=None, type=None];
23 [selector=None, type=sink];
22 [selector=None, type=None];
21 [selector=None, type=None];
20 [selector=if, type=None];
19 [selector=None, type=None];
18 [selector=None, type=None];
17 [selector=while, type=None];
16 [selector=None, type=None];
15 [selector=None, type=None];
14 [selector=else, type=None];
13 [selector=if, type=None];
12 [selector=None, type=None];
11 [selector=None, type=None];
0 -> 1  [action="(:= x 5)", label="(:= x 5)"];
1 -> 2  [action="(:= x ([] y 2))", label="(:= x ([] y 2))"];
4 -> 5  [action="(:= (. z fst) 2)", label="(:= (. z fst) 2)"];
3 -> 4  [action="(:= ([] y 1) x)", label="(:= ([] y 1) x)"];
2 -> 3  [action="(:= ([] y 2) 5)", label="(:= ([] y 2) 5)"];
10 -> 11  [action="(:= x 9)", label="(:= x 9)"];
9 -> 10  [action="(> x 2)", label="(> x 2)"];
9 -> 11  [action="(! (> x 2))", label="(! (> x 2))"];
8 -> 9  [action="(:= x 3)", label="(:= x 3)"];
7 -> 8  [action="(:= x (+ x ([] y 2)))", label="(:= x (+ x ([] y 2)))"];
6 -> 7  [action="(:= z (x, ([] y 1)))", label="(:= z (x, ([] y 1)))"];
5 -> 6  [action="(:= (. z snd) 5)", label="(:= (. z snd) 5)"];
22 -> 23  [action="(:= ([] y 1) (+ (* ([] y 2) x) (. z fst)))", label="(:= ([] y 1) (+ (* ([] y 2) x) (. z fst)))"];
21 -> 16  [action="(:= (. z fst) (+ (. z fst) 1))", label="(:= (. z fst) (+ (. z fst) 1))"];
20 -> 21  [action="(:= (. z fst) 0)", label="(:= (. z fst) 0)"];
19 -> 21  [action="(! (== x 1))", label="(! (== x 1))"];
19 -> 20  [action="(== x 1)", label="(== x 1)"];
18 -> 19  [action="(:= y (- y 1))", label="(:= y (- y 1))"];
17 -> 18  [action="(:= x (- x 1))", label="(:= x (- x 1))"];
16 -> 22  [action="(! (& (> x 0) (| (< ([] y 0) 4) (< ([] y 1) 4))))", label="(! (& (> x 0) (| (< ([] y 0) 4) (< ([] y 1) 4))))"];
16 -> 17  [action="(& (> x 0) (| (< ([] y 0) 4) (< ([] y 1) 4)))", label="(& (> x 0) (| (< ([] y 0) 4) (< ([] y 1) 4)))"];
15 -> 16  [action="(:= ([] y 2) 2)", label="(:= ([] y 2) 2)"];
14 -> 15  [action="(:= ([] y 1) 4)", label="(:= ([] y 1) 4)"];
13 -> 16  [action="(:= ([] y 1) 6)", label="(:= ([] y 1) 6)"];
12 -> 14  [action="(! (> ([] y 1) 5))", label="(! (> ([] y 1) 5))"];
12 -> 13  [action="(> ([] y 1) 5)", label="(> ([] y 1) 5)"];
11 -> 12  [action="(:= x 1)", label="(:= x 1)"];
}
